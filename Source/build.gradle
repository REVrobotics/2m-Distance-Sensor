plugins {
  id 'cpp'
  id 'java'
  id 'edu.wpi.first.wpilib.repositories.WPILibRepositoriesPlugin' version '2020.2'
  id 'edu.wpi.first.NativeUtils' version '2020.5.2'
  id 'edu.wpi.first.GradleJni' version '0.10.1'
  id 'edu.wpi.first.GradleVsCode' version '0.10.0'
}

allprojects {
    repositories {
        mavenCentral()
    }
    if (project.hasProperty('releaseMode')) {
        wpilibRepositories.addAllReleaseRepositories(it)
    } else {
        wpilibRepositories.addAllDevelopmentRepositories(it)
    }
}

apply from: 'config.gradle'

ext.sharedNiConfigs = [DistanceSensor: ['linux:athena'], DistanceSensorDriver: ['linux:athena']]
ext.sharedBaseConfigs = [DistanceSensor: [], DistanceSensorDriver: []]
ext.sharedConfigs = [DistanceSensor: []]

apply from: 'dependencies.gradle'

nativeUtils {
  exportsConfigs {
      DistanceSensor {
      }
      DistanceSensorDriver {
      }
  }
  privateExportsConfigs {
    //DistanceSensorDriver {
      //exportsFile = project.file("src/main/driver/symbols.txt")
    //}
  }
}

model {
  components {
    DistanceSensor(NativeLibrarySpec) {
      sources {
        cpp {
          source {
            srcDirs 'src/main/native/cpp'
            include '**/*.cpp', '**/*.c'
          }
          exportedHeaders {
            srcDirs 'src/main/native/include'
          }
        }
      }
      binaries.all {
        lib library: "DistanceSensorDriver", linkage: 'shared'
      }

      nativeUtils.useRequiredLibrary(it, "wpilib_shared")
    }
    DistanceSensorDriver(JniNativeLibrarySpec) {
      enableCheckTask true
      javaCompileTasks << compileJava
      jniCrossCompileOptions << JniCrossCompileOptions(nativeUtils.wpi.platforms.roborio)
      sources {
        cpp {
          source {
            srcDirs 'src/main/driver/cpp'
            include '**/*.cpp', '**/*.c'
          }
          exportedHeaders {
            srcDirs 'src/main/driver/include'
          }
        }
      }
      nativeUtils.useRequiredLibrary(it, "driver_shared")
    }
  }
}

javadoc {
  options.addBooleanOption('-no-module-directories', true) 
}

apply from: 'publish.gradle'

wrapper {
  gradleVersion = '6.0'
}
